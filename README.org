#+Title: Taller de GIT
#+Author: Eugenio & Coyote & Nacho
#+Email:SexyACM@BestAsocEUW.io
#+LANGUAGE: es
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+CREATOR: Emacs 24.5.1 (Org mode 8.3.2)
#+LATEX_CLASS_OPTIONS: [a4paper,hidelinks]
#+LATEX_CLASS_OPTIONS: [...,hidelinks]

#+OPTIONS: reveal_center:t reveal_progress:t reveal_history:t reveal_control:t
#+OPTIONS: reveal_rolling_links:nil reveal_keyboard:t reveal_overview:t num:nil
#+OPTIONS: reveal_slide_number:h/v
#+OPTIONS: reveal_width:1200 reveal_height:800
#+REVEAL_MARGIN: 0.1
#+REVEAL_MIN_SCALE: 0.5
#+REVEAL_MAX_SCALE: 2.5
#+REVEAL_TRANS: linear
#+REVEAL_THEME: league
#+REVEAL_HLEVEL: 1
#+REVEAL_EXTRA_CSS: ./acm.css
#+REVEAL_HEAD_PREAMBLE: <meta name="description" content="GIT-FTW.">
#+REVEAL_PLUGINS: (markdown notes zoom multiplex classList)
#+REVEAL_EXTRA_JS: { src: './acm.js', async: true }

#+OPTIONS: toc:nil
# #+OPTIONS: reveal_single_file:t

# Read: https://github.com/yjwen/org-reveal/

* Curso de Git - 2016 2017
* Introdución
** Control de versiones
*** 
 [[./img/local.png]]
*** 
[[./img/centralized.png]]
*** 
[[./img/distributed.png]]

** GIT
- Control de versiones
- Potencia el desarrollo de código distribuido.
- Y mola mucho
** Instalar GIT

#+BEGIN_SRC bash

sudo pacman -S git

sudo apt-get install git

#+END_SRC
*** Configurar GIT

#+BEGIN_SRC bash

git config --global user.name "Your Name"

git config --global user.email "your_email@whatever.com"

git init

git remote add {nombreDelRemoto} {URLDelRepositorio}

git clone
#+END_SRC
* Git vs Otros entornos. ¿Por qué git?
** SVN
** Mercurial
* Estructura de Git
[[./img/git-parts-repo.png]]
* Comandos de git. Desde lo más útiles a los salvavidas
** Add & Commit

#+BEGIN_SRC bash

git add [files]

git add . #Añadiría todos los cambios al index

git add *.java #Añadiría únicamente aquellos archivos modificados que terminen en .java

git add directorio/ #Añadiría el directorio y TODO SU CONTENIDO al index

#+END_SRC

#+BEGIN_SRC bash

git commit [--ammend] [-m "Mensaje del commit"]

git commit -m "Hello World Completado"

git commit -a -m <mensaje> # Equivalente a git add --all y git commit -m "Mensaje"

#+END_SRC
** Push
#+BEGIN_SRC bash

git push [<remote>] [<branch>]

git push #Equivalente a git push <remote>, solo si existe el remoto

git push <remote> master # push de los cambios a la rama master del remoto

#+END_SRC
** Pull

#+BEGIN_SRC bash

git pull

git pull origin # git fetch && git merge FETCH_HEAD

#+END_SRC
** Merge
** Conflictos
* Buenas praxis de git
* Magit
[[./img/Emacs-icon.png]]
* Integración con otras herramientas/entornos
*** 
[[./img/git_kraken.png]]
*** 
[[./img/SourceTreeLogo.png]]
** Eclipse (sí...)
[[./img/EclipseLogo.png]]
* Recursos
- [[https://git-scm.com/book/en/v2][Git Book]]
  - PDF, EPUB, MOBI, HTML
- [[https://try.github.io/levels/1/challenges/1][try.github.io]]
- [[https://guides.github.com/][guides.github.com]]

* Preguntas

*** TODO Proyecto
