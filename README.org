#+Title: Taller de GIT
#+Author: Eugenio & Álvaro & Ignacio & Victor & Samuel & Luis
#+Email:SexyACM@BestAsocEUW.io
#+LANGUAGE: es
#+SELECT_TAGS: export
#+EXCLUDE_TAGS: noexport
#+CREATOR: Emacs 24.5.1 (Org mode 8.3.2)
#+LATEX_CLASS_OPTIONS: [a4paper,hidelinks]
#+LATEX_CLASS_OPTIONS: [...,hidelinks]

#+OPTIONS: reveal_center:t reveal_progress:t reveal_history:t reveal_control:t
#+OPTIONS: reveal_rolling_links:nil reveal_keyboard:t reveal_overview:t num:nil
#+OPTIONS: reveal_slide_number:h/v
#+OPTIONS: reveal_width:1200 reveal_height:800
#+REVEAL_MARGIN: 0.1
#+REVEAL_MIN_SCALE: 0.5
#+REVEAL_MAX_SCALE: 2.5
#+REVEAL_TRANS: linear
#+REVEAL_THEME: league
#+REVEAL_HLEVEL: 1
#+REVEAL_EXTRA_CSS: ./acm.css
#+REVEAL_HEAD_PREAMBLE: <meta name="description" content="GIT-FTW.">
#+REVEAL_PLUGINS: (markdown notes zoom multiplex classList)
#+REVEAL_EXTRA_JS: { src: './acm.js', async: true }

#+OPTIONS: toc:nil
# #+OPTIONS: reveal_single_file:t

# Read: https://github.com/yjwen/org-reveal/

* Curso de Git - 2016 2017
[[https://acmfi.github.io/cursogit2016-2016]]
* Introdución
** Control de versiones
*** 
[[./img/delta.png]]
*** 
[[./img/snapshots.png]]
*** 
Control de versiones local, único ordenador.
#+attr_html: :width 60%
 [[./img/local.png]]
*** 
Control de versión centralizado.
#+attr_html: :width 60%
[[./img/centralized.png]]
*** 
Control de versión distribuido.
#+attr_html: :width 45%
[[./img/distributed.png]]

** 
[[./img/git-logo.png]]
*** 
- Control de versiones
- Potencia el desarrollo de código distribuido.
- Y mola mucho
** Instalar GIT

#+BEGIN_SRC bash
sudo pacman -S git #Arch based

sudo apt-get install git #Debian based

brew install git #macOS
#+END_SRC

- ¡Git está para Güindous! https://git-scm.com/download/win 
  Integra git en windows dándote, además, una terminal que simula una
  terminal linux

*** Configurar GIT

#+BEGIN_SRC bash

git config --global user.name "Your Name"

git config --global user.email "your_email@whatever.com"

git init

git remote add {nombreDelRemoto} {URLDelRepositorio}

git clone
#+END_SRC
* Git vs Otros entornos. ¿Por qué git?
- Porque sí. ¿Esperabas una respuesta mejor? Pues no.
- Es lo que toca porque lo vamos a usar en las asignaturas.
- También es la herramienta más extendida y a la que todas migran.
** SVN
- Pros:
  - Sencillez. 
- Contras: 
  - Solo existe un repo, imposible trabajar en local.
  - No es git.
  - Sencillez.
** Mercurial
Bitbucket.
- Pros:
  - Simple pero casi igual de potente que git.
  - Newbie friendly.
- Contras:
  - ¿Trabajar con ramas?. Iluso...
  - Monolítico.
  - Menos flexible.
* Estructura de Git
[[./img/git-parts-repo.png]]
*** 
#+attr_html: :width 45%
[[./img/git-flow.png]]

* Comandos de git. Desde lo más útiles a los salvavidas

** Git Status

#+BEGIN_SRC bash

git status

#+END_SRC

[[./img/git-status.gif]]
** Add & Commit

[[./img/file-status-livecycle.png]]

*** 
#+BEGIN_SRC bash

git add [files]

git add . #Añadiría todos los cambios al index

git add *.java #Añadiría únicamente aquellos archivos modificados que terminen en .java

git add directorio/ #Añadiría el directorio y TODO SU CONTENIDO al index

#+END_SRC

#+BEGIN_SRC bash

git commit [--ammend] [-m "Mensaje del commit"]

git commit -m "Hello World Completado"

git commit -a -m <mensaje> # Equivalente a git add --all y git commit -m "Mensaje"

#+END_SRC

** Push
#+BEGIN_SRC bash

git push [<remote>] [<branch>]

git push #Equivalente a git push <remote>, solo si existe el remoto

git push <remote> master # push de los cambios a la rama master del remoto

#+END_SRC
** Log
#+BEGIN_SRC bash
git log
#+END_SRC
[[./img/git-log-bad.jpg]]
*** 
- Si usáis terminal para git, es recomendable tener alias.
- [[http://durdn.com/blog/2012/11/22/must-have-git-aliases-advanced-examples/][Ejemplos de alias]]
*** 
#+BEGIN_SRC bash
git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
#+END_SRC
[[./img/git-log-good.jpg]]

** Pull

#+BEGIN_SRC bash

git pull

git pull origin # git fetch && git merge FETCH_HEAD

#+END_SRC
** Branch
#+BEGIN_SRC bash
git branch [opts] <nombre_de_la_rama> #Para listar, crear o eliminar ramas
#+END_SRC
*** 
#+attr_html: :width 45%
[[./img/git-flow.png]]
** Checkout
#+BEGIN_SRC bash
git checkout <nombre_de_la_rama>
#+END_SRC
** Merge & Rebase

#+BEGIN_SRC bash
git merge [branch] # Mergea branch con la actual

       A---B---C topic
      /         \
 D---E---F---G---H master
   kbranch      merge

git merge [-m "Mensaje del commit"] [branch] # Mergra branch con la actual y lo incluye en un commit

git merge [--abort] # Aborta el merge si entran en conflicto

git rebase [branch] # Rebase. Por cada commit que hay en el branch, rebase genera un nuevo commit en el branch actual

      +--3--5   master
      |
1--2--+
      |
      +--3--5--7--8   feature
              (4)(6)
    branch    rebase
#+END_SRC

** Conflictos
*** 
Lo que no ha unido la máquina, que lo haga el desarrollador.
#+attr_html: :width 75%
[[./img/conflict.png]]
#+attr_html: :width 75%
[[./img/conflictSolved.png]]
** Stash
#+BEGIN_SRC bash
git stash
#+END_SRC

Usado para descartar cambios y volver al estado anterior del commit.
** Rebase, Fetch, Pull Request
* ¿Preguntas?
* Buenas praxis de git
- No te asustes.
- Las ramas son tus amigas.
- Commitea a menudo con cambios graduales y específicos.
- Ponle un mensaje útil a los mensajes.
- No todos los aportes son iguales: Las ramas son tus amigas.
- gitignore
- NO HAY UNA ÚNICA FORMA DE HACER ALGO CON GIT
*** 
#+ATTR_REVEAL: :frag (appear)
- Lee
- Lee mucho
- [[https://guides.github.com/introduction/flow/][El flow de Github]] (que no git)
- [[https://about.gitlab.com/2014/09/29/gitlab-flow/][Gitlab también tiene su flow]]
*** 
#+attr_html: :width 45%
[[./img/git-flow.png]]
* Integración con otras herramientas/entornos
*** Magit
[[./img/Emacs-icon.png]]

*** 
#+attr_html: :width 50%
[[./img/git_kraken.png]]

[[https://www.gitkraken.com/][www.gitkraken.com]]
*** 
#+attr_html: :width 50%
[[./img/SourceTreeLogo.png]]

[[https://www.sourcetreeapp.com/][www.sourcetreeapp.com]]
** Eclipse (sí...)
#+attr_html: :width 65%
[[./img/EclipseLogo.png]]

[[http://www.eclipse.org/egit/][www.eclipse.org/egit]]
** Y más
- Matlab, Visual Studio...
** Platafromas (host)
#+attr_html: :width 70%
[[./img/chart-comparision.png]]
*** Github
[[./img/github-integration.png]]
*** Github Education

- Repositorios privados ilimitados durante 2 años


[[https://education.github.com/][education.github.com]]
* Recursos
- [[https://git-scm.com/book/en/v2][Git Book]]
  - PDF, EPUB, MOBI, HTML
- [[https://try.github.io/levels/1/challenges/1][try.github.io]]
- [[https://guides.github.com/][guides.github.com]]
- [[https://about.gitlab.com/blog/archives.html][about.gitlab.com/blog/]]
  
* ¿Preguntas?
    
